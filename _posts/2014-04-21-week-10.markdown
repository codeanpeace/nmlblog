---
layout: post
title:  "Week 10: Analogue"
date:   2014-04-21 12:40:46
categories:
---

### Analogue I/O
Analogue out lets you control in a spectrum - think all the states/angles of a servo motor or potentiometer can turn versus the binary digital on/off of LEDs.

<iframe src="//player.vimeo.com/video/92609020" width="500" height="281" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen></iframe> <p><a href="http://vimeo.com/92609020">RGB Pot Colors</a> from <a href="http://vimeo.com/user4315024">Harrison Tan</a> on <a href="https://vimeo.com">Vimeo</a>.</p> <p>Potentiometer knob controls the intensity of the three primary colors: red, green, blue. The color the know affects at any given moment depends on the RFID card read by the shield.</p>

### RGB Pot Colors Arduino Code
    #include <Wire.h>
    #include <Adafruit_NFCShield_I2C.h>

    #define IRQ   (2)
    #define RESET (3)  // Not connected by default on the NFC Shield

    Adafruit_NFCShield_I2C nfc(IRQ, RESET);

    int const redLEDPin = 11;
    int const greenLEDPin = 9;
    int const blueLEDPin = 10;

    int redValue = 0;
    int greenValue = 0;
    int blueValue = 0;

    int const potPin = A0;
    int potValue;
    int rgbIntensity; // map raw potValue to rgb range 0, 255

    // 1 => red; 2 => green; 3 => blue
    int rgbSelector;


    void setup() {
      Serial.begin(115200);
      Serial.println("Hello!");

      nfc.begin();

      nfc.setPassiveActivationRetries(0x0F);

      uint32_t versiondata = nfc.getFirmwareVersion();
      if (! versiondata) {
        Serial.print("Didn't find PN53x board");
        while (1); // halt
      }
      // Got ok data, print it out!
      Serial.print("Found chip PN5"); Serial.println((versiondata >> 24) & 0xFF, HEX);
      Serial.print("Firmware ver. "); Serial.print((versiondata >> 16) & 0xFF, DEC);
      Serial.print('.'); Serial.println((versiondata >> 8) & 0xFF, DEC);

      // configure board to read RFID tags
      nfc.SAMConfig();

      Serial.println("Waiting for an ISO14443A Card ...");

      pinMode(greenLEDPin, OUTPUT);
      pinMode(redLEDPin, OUTPUT);
      pinMode(blueLEDPin, OUTPUT);
    }

    void loop() {
      uint8_t success;
      uint8_t uid[] = { 0, 0, 0, 0, 0, 0, 0 };  // Buffer to store the returned UID
      uint8_t uidLength;                        // Length of the UID (4 or 7 bytes depending on ISO14443A card type)
    Serial.println("before");
      success = nfc.readPassiveTargetID(PN532_MIFARE_ISO14443A, uid, &uidLength);
    Serial.println("after");
      if (success) {
        // Display some basic information about the card
        Serial.println("Found an ISO14443A card");
        Serial.print("  UID Length: "); Serial.print(uidLength); Serial.println(" bytes");
        Serial.print("  UID Value: ");
        // this prints out decimal representations of the
        // byte in the UID array
        Serial.print(uid[0]);
        Serial.print(" ");
        Serial.print(uid[1]);
        Serial.print(" ");
        Serial.print(uid[2]);
        Serial.print(" ");
        Serial.print(uid[3]);

        // this is the utility fxn to print out hex values
        // nfc.PrintHex(uid, uidLength);
        Serial.println("");

        if(uid[0] == 84 && uid[1] == 134 && uid[2] == 233 && uid[3] == 63) {
          rgbSelector = 1;
        }
        else if(uid[0] == 205 && uid[1] == 47 && uid[2] == 185 && uid[3] == 125) {
          rgbSelector = 2;
        }
        else if(uid[0] == 85 && uid[1] == 231 && uid[2] == 214 && uid[3] == 1) {
          rgbSelector = 3;
        }
      }

    //  while(rgbSelector != 0) {
      potValue = analogRead(potPin);
      rgbIntensity = map(potValue, 0, 1023, 0, 255);

      if(rgbSelector == 1) {
        redValue = rgbIntensity;
      }
      else if(rgbSelector == 2) {
        greenValue = rgbIntensity;
      }
      else if(rgbSelector == 3) {
        blueValue = rgbIntensity;
      }

      Serial.print("Raw Sensor Value: ");
      Serial.println(potValue);
      Serial.print("Selector: ");
      Serial.println(rgbSelector);
      Serial.print("Red: ");
      Serial.print(redValue);
      Serial.print("\t Green: ");
      Serial.print(greenValue);
      Serial.print("\t Blue: ");
      Serial.println(blueValue);

      analogWrite(redLEDPin, redValue);
      analogWrite(greenLEDPin, greenValue);
      analogWrite(blueLEDPin, blueValue);
    //  }
    }